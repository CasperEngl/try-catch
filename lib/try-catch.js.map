{"version":3,"file":"try-catch.js","sources":["../src/try-catch.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport async function tryCatch <T>(\n  subject: Function | Promise<T>,\n  ...args: any\n): Promise<[Error, undefined] | [null, T]> {\n  if (typeof subject === 'function') {\n    const fn = (subject as typeof subject)\n\n    try {\n      return [null, await fn(...args)]\n    } catch (error) {\n      return [error, undefined]\n    }\n  }\n\n  if (Promise.resolve(subject) === subject) {\n    try {\n      return [null, await subject]\n    } catch (error) {\n      return [error, undefined]\n    }\n  }\n\n  return [new TypeError(`'${subject ? subject.toString() : subject}' is not a function or promise`), undefined]\n}\n"],"names":["subject","_i","args","fn","_c","undefined","Promise","resolve","TypeError","toString"],"mappings":"6PAGEA,OACA,aAAAC,mBAAAA,IAAAC,iJAEuB,mBAAZF,EAAP,YACIG,EAAMH,mBAGI,gCAAN,SAAYG,eAAMD,WAA1B,mBAAcE,mBAEd,SAAO,eAAQC,cAIfC,QAAQC,QAAQP,KAAaA,EAA7B,6BAEc,gCAAN,SAAYA,UAApB,mBAAcI,mBAEd,SAAO,eAAQC,WAInB,SAAO,CAAC,IAAIG,UAAU,KAAIR,EAAUA,EAAQS,WAAaT,0CAA0CK"}